import streamlit as st
from PIL import Image
import google.generativeai as genai
import io

genai.configure("GENAI_API_KEY")

#Streamli UI
st.set_page_config(page_title="Image Description with Gemini")
st.title("Gescribe an Image using Gemini")
st.markdown("Upload an image and get detailed description generated by Gemini")

uploaded_file = st.file_uploader("Choose an image" , 
                                 type=["jpg","jpeg","png"])


if uploaded_file is not None:
    try:
        #Reopen the image with PIL to avoid any format issues
        img = Image.open(uploaded_file).convert("RGB")

        #Display the image
        st.image(img , caption="Uploaded Image")

        #Convert the image into proper byte array (encode as png or jpg)
        byte_stream = io.BytesIO()
        img.save(byte_stream , format="PNG")
        image_bytes = byte_stream.getvalue()

        if st.button("Describe image"):
            with st.spinner("Thinking...."):
                model = genai.GenerativeModel('models/gemini-2.0-flash')
                response = model.generate_content([
                    "Describe this image in detail.",
                    {"mime_type" : "image/png" , "data" : image_bytes}
                    ])
                st.success("Description generated..")
                st.markdown("### AiCouncil says:")
                st.write(response.text)


    except Exception as e:
        st.error(f"An error occured: {e}")